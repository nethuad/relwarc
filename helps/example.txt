
# CSS 语法
*                  选择所有节点
#container         选择id为container的节点
.container      选择所有class包含container的节点
li a            选取所有li 下所有a节点
ul + p          选取ul后面的第一个p元素
div#container > ul 选取id为container的div的第一个ul子元素
ul ~p             选取与ul相邻的所有p元素
a[title]        选取所有有title属性的a元素
a[href="http://jobbole.com"]  选取所有href属性为http://jobbole.com的a元素
a[href*="jobbole"]     选取所有href属性值中包含jobbole的a元素

a[href^="http"]    选取所有href属性值中以http开头的a元素
a[href$=".jpg"]    选取所有href属性值中以.jpg结尾的a元素
input[type=radio]:checked   选择选中的radio的元素

div:not(#container)  选取所有id为非container 的div属性
li:nth-child(3)      选取第三个li元素
li:nth-child(2n)      选取第偶数个li元素

next_page = response.css('#main_wrap div.page a:contains("下页")::attr(href)').extract_first()

-----------

<html>
 <head>
  <base href='http://example.com/' />
  <title>Example website</title>
 </head>
 <body>
  <div id='images'>
   <a href='image1.html'>Name: My image 1 <br /><img src='image1_thumb.jpg' /></a>
   <a href='image2.html'>Name: My image 2 <br /><img src='image2_thumb.jpg' /></a>
   <a href='image3.html'>Name: My image 3 <br /><img src='image3_thumb.jpg' /></a>
   <a href='image4.html'>Name: My image 4 <br /><img src='image4_thumb.jpg' /></a>
   <a href='image5.html'>Name: My image 5 <br /><img src='image5_thumb.jpg' /></a>
  </div>
 </body>
</html>



response.xpath() 
response.css()
.xpath() 及 .css() 方法返回一个类 SelectorList 的实例

response.xpath('//title/text()')
response.css('title::text')

提取文本
response.xpath('//title/text()').extract()
response.css('title::text').extract()

获取属性节点
response.xpath('//base/@href').extract()
response.css('base::attr(href)').extract()


属性条件
response.xpath('//a[contains(@href, "image")]/@href').extract()
response.css('a[href*=image]::attr(href)').extract()

response.xpath('//a[contains(@href, "image")]/img/@src').extract()
response.css('a[href*=image] img::attr(src)').extract()


正则表达式使用选择器(selectors).re()
response.xpath('//a[contains(@href, "image")]/text()').re(r'Name:\s*(.*)')


相对路径
divs.xpath('.//p')
divs.xpath('p')


全局路径
response.xpath('//div')


XPath函数
starts-with()
contains()
test() 

    >>> from scrapy import Selector
    >>> doc = """
    ... <div>
    ...     <ul>
    ...         <li class="item-0"><a href="link1.html">first item</a></li>
    ...         <li class="item-1"><a href="link2.html">second item</a></li>
    ...         <li class="item-inactive"><a href="link3.html">third item</a></li>
    ...         <li class="item-1"><a href="link4.html">fourth item</a></li>
    ...         <li class="item-0"><a href="link5.html">fifth item</a></li>
    ...     </ul>
    ... </div>
    ... """
    >>> sel = Selector(text=doc, type="html")
    >>> sel.xpath('//li//@href').extract()
    [u'link1.html', u'link2.html', u'link3.html', u'link4.html', u'link5.html']
    >>> sel.xpath('//li[re:test(@class, "item-\d$")]//@href').extract()
    [u'link1.html', u'link2.html', u'link4.html', u'link5.html']
    >>>


text='<a href="#">Click here to go to the <strong>Next Page</strong></a>'
xpath("string(//a[1])").extract()


>>> from scrapy import Selector
>>> sel = Selector(text="""
....:     <ul class="list">
....:         <li>1</li>
....:         <li>2</li>
....:         <li>3</li>
....:     </ul>
....:     <ul class="list">
....:         <li>4</li>
....:         <li>5</li>
....:         <li>6</li>
....:     </ul>""")
>>> xp = lambda x: sel.xpath(x).extract()

xp("//li[1]")
[u'<li>1</li>', u'<li>4</li>']

xp("(//li)[1]")

xp("//ul/li[1]")


>>> sel = Selector(text='<div class="hero shout"><time datetime="2014-07-23 19:00">Special date</time></div>')
>>> sel.css('.shout').xpath('./time/@datetime').extract()

